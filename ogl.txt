const float x0 = 1.0, y0 = -sqrt(3)/2;
	glClear(GL_COLOR_BUFFER_BIT);
	glLoadIdentity();
	glTranslatef(0, 0, -10);

//zadanie nr 1 i 3 czyli kolorowanie trojkatow

	glScalef(0.5, 0.5, 1.0);
	for (unsigned int i = 0; i < 6; i++)
	{
		glPushMatrix();
		glRotatef(60 * i, 0.5, 0, 1);
		glTranslatef(0, 0.8 ,0);

		glBegin(GL_TRIANGLES);
		glColor3f(1.0, 0.0, 0.0);
		glVertex3f(-x0, -y0, 0);
		glColor3f(0.0, 1.0, 0.0);
		glVertex3f(x0, -y0, 0);
		glColor3f(0.0, 0.0, 1.0);
		glVertex3f(0, y0, 0);
		glEnd();

		glPopMatrix();
	}

	//zadenie 2 czyli ta ca³a macierz tyle, ¿e nie dzia³a do koñca tak jak powinno

	/*float x = 0.5, y = 0.5;
	glPushMatrix();
	glTranslatef(1, 0, 0);
	glBegin(GL_QUADS);
	glVertex3f(-x, x, 0);
	glVertex3f(x, x, 0);
	glVertex3f(x, -x, 0);
	glVertex3f(-x, -x, 0);
	glEnd();
	glPopMatrix();

	glPushMatrix();
	glTranslatef(1, 1, 0);
	glScalef(0.2, 0.2, 1);
	glColor3f(1, 1, 0);
	glBegin(GL_QUADS);
	glVertex3f(-x, x, 0);
	glVertex3f(x, x, 0);
	glVertex3f(x, -x, 0);
	glVertex3f(-x, -x, 0);
	glEnd();
	glPopMatrix();

	float n[4] = {0,1,-1,1};
	float L[4] = {0,1.2,0.5,0.9};
	float a = 0;
	for (unsigned int i = 0; i < 4; i++)
		a += L[i] * n[i];
	float M[16];
	for (int kolumna = 0; kolumna < 4; kolumna++)
		for (int wiersz = 0; wiersz < 4; wiersz++)
			M[4 * kolumna + wiersz] = -n[kolumna] + (kolumna == wiersz ? a : 0);

	glMultMatrixf(M);

	glColor3f(1, 1, 1);
	glTranslatef(1, 0, 0);
	glBegin(GL_QUADS);
	glVertex3f(-x, x, 0);
	glVertex3f(x, x, 0);
	glVertex3f(x, -x, 0);
	glVertex3f(-x, -x, 0);
	glEnd();*/

	//zadanie 4 czyli szeœcianik, ale funkcja jest poni¿ej
	/*glRotatef(-60, 1, 1, 1);
	Ryszuj_prostopoadloscian(1, 1, 1);*/
	SwapBuffers(uchwytDC);
	//by Sylwester :) i nie wa¿ siê tego usuwaæ :)


void Ryszuj_prostopoadloscian(float dx, float dy, float dz)
{
	float x = dx / 2.0f;
	float y = dy / 2.0f;
	float z = dz / 2.0f;
	glBegin(GL_QUADS);
	//tyl
	glColor3f(1.0, 0.0, 0.0);
	glVertex3f(-x, -y, -z);
	glVertex3f(-x, y, -z);
	glVertex3f(x, y, -z);
	glVertex3f(x, -y, -z);

	//przod
	
	glVertex3f(-x, -y, z);
	glVertex3f(x, -y, z);
	glVertex3f(x, y, z);
	glVertex3f(-x, y, z);

	//prawa
	glColor3f(0.0, 1.0, 0.0);
	glVertex3f(x, -y, z);
	glVertex3f(x, y, z);
	glVertex3f(x, y, -z);
	glVertex3f(x, -y, -z);

	//lewa
	glVertex3f(-x, -y, z);
	glVertex3f(-x, y, z);
	glVertex3f(-x, y, -z);
	glVertex3f(-x, -y, -z);

	//gora
	glColor3f(0.0, 0.0, 1.0);
	glVertex3f(-x, y, z);
	glVertex3f(x, y, z);
	glVertex3f(x, y, -z);
	glVertex3f(-x, y, -z);

	//dolna
	glVertex3f(-x, -y, z);
	glVertex3f(x, -y, z);
	glVertex3f(x, -y, -z);
	glVertex3f(-x, -y, -z);

	glEnd();

}
